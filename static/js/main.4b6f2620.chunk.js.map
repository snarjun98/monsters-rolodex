{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","Cardlist","monsters","map","Searchbox","placeholder","handleChange","type","onChange","App","e","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filtereMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTACaA,G,YAAO,SAACC,GAAD,OACpB,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UACTC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACH,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCHLC,EAAW,SAACR,GAAD,OACxB,qBAAKC,UAAU,YAAf,SACAD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAC1B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJNM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACzB,8BACA,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,QCkC7DG,G,wDAhCf,aAAc,IAAD,8BACb,gBAYAH,aAAa,SAACI,GAAK,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAXvD,EAAKC,MAAO,CACZb,SAAS,GACTU,YAAY,IAJC,E,gEAQO,IAAD,OACnBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACT,SAASkB,S,+BAI5B,IAAD,SACsBC,KAAKN,MAA5Bb,EADC,EACDA,SAASU,EADR,EACQA,YACVU,EAAiBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC5CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAChD,OACE,sBAAK9B,UAAU,MAAf,UACE,iDACF,cAAC,EAAD,CACAW,YAAY,kBACZC,aAAc,SAAAI,GAAC,OAAI,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,WAEvD,cAAC,EAAD,CAAUZ,SAAUoB,W,GA3BNI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4b6f2620.chunk.js","sourcesContent":["import './card.style.css'\r\nexport const Card = (props) =>(\r\n<div className='card-container'>\r\n<img alt='monster'\r\nsrc={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n<h2>{props.monster.name}</h2>\r\n<p>{props.monster.email}</p>\r\n</div>\r\n)","import './card-list.style.css';\r\nimport {Card} from '../card/card.component';\r\n\r\nexport const Cardlist = (props) =>(\r\n<div className='card-list'>{\r\nprops.monsters.map(monster=>(\r\n<Card key={monster.id} monster={monster} />))\r\n}</div>\r\n);","import './search-box.stylee.css';\r\n\r\nexport const Searchbox = ({placeholder,handleChange})=>(\r\n<div>\r\n<input className='search' type='search' placeholder={placeholder} onChange={handleChange} />\r\n</div>\r\n);","import { Component } from'react';\nimport {Cardlist} from './components/card-list/card-list.component';\nimport {Searchbox} from './components/search-box/search-box.component'\nimport './App.css';\n\nclass App extends Component{\nconstructor(){\nsuper();\nthis.state ={\nmonsters:[],\nsearchfield:''\n};\n}\n\ncomponentDidMount(){\nfetch('https://jsonplaceholder.typicode.com/users')\n.then(response=>response.json())\n.then(users=>this.setState({monsters:users}))\n}\nhandleChange=(e)=>{this.setState({searchfield:e.target.value});};\n\nrender(){\nconst {monsters,searchfield} =this.state;\nconst filtereMonsters =monsters.filter(monster =>\n  monster.name.toLowerCase().includes(searchfield.toLowerCase()))\n  return (\n    <div className=\"App\">\n      <h1>Monster Rolodex</h1>\n    <Searchbox\n    placeholder='search monsters'\n    handleChange={e => this.setState({searchfield:e.target.value})}\n    />\n    <Cardlist monsters={filtereMonsters}/>\n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}